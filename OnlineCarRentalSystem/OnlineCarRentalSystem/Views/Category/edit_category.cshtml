@model OnlineCarRentalSystem.Models.Category
@{
    ViewBag.Title = "edit_category";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h2>Editing</h2>

@using (Html.BeginForm("edit_category", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(x => x.category, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.category, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.category, "", new { @class = "text-danger col-md-offset-2 col-md-10" })
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 thumbnail" id="ImagePreview" style="height:90px; width:90px">
                <img src="~/uploads/category/@Model.Image"class="img-responsive" id="TargetImage" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Image, new { @class = "col-md-2 control-label " })
             <input type="file" name="upload" id="category_image" />
            <span id="error-image" style="display:none">
                @Html.Label("", new { @class = "text-danger col-md-offset-2 col-md-10" })
            </span>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.description, new { @class = "col-md-2 control-label" })
            @Html.TextAreaFor(m => m.description, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Category List", "retrieve_categories")
</div>


@section scripts
{
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#category_image").change(function () {


                if ($("#category_image").val() != "") {
                    //extention validation
                    var filename = document.getElementById("category_image").value;
                    var extention = filename.substr(filename.lastIndexOf('.') + 1);
                    var validextention = ['bmp', 'gif', 'png', 'jpg', 'PNG'];
                    if ($.inArray(extention, validextention) == -1) {

                        $("#error-image").text("please select Image by valid extention").fadeIn(3000);
                        $("#ImagePreview").hide();
                        $("#category_image").text("");
                        return false;
                    }
                    else {
                        var File = this.files;
                        ReadImage(File[0]);

                    }
                }

            });
            var ReadImage = function (file) {
                var reader = new FileReader;
                var image = new Image;

                reader.readAsDataURL(file)
                reader.onload = function (_file) {
                    image.src = _file.target.result;
                    image.onload = function () {
                        $("#TargetImage").attr('src', image.src);
                        $("#ImagePreview").show();
                        $("#error-image").text("");
                    }
                }
            }
        });
            $("#edit").click(function () {
    
                if ($("#category_image").val() == "")
                {
                   
                    $("#error-image").text("Please Upload Image").fadeIn(3000);
                    return false;
                    
                }
            });

    

    </script>
}
